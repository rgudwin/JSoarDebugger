/*******************************************************************************
 * Copyright (c) 2012  DCA-FEEC-UNICAMP
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser Public License v3
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl.html
 * 
 * Contributors:
 *     K. Raizer, A. L. O. Paraense, R. R. Gudwin - initial API and implementation
 ******************************************************************************/
package support;

import Soar.SoarEngine;
import java.awt.Dialog;
import org.jsoar.kernel.symbols.Identifier;
import representation.WMNode;
import representation.WMTreeNode;

//import org.jfree.ui.RefineryUtilities;
//
//import br.unicamp.cst.representation.owrl.Wme;
//import br.unicamp.cst.representation.owrl.Property;
//import br.unicamp.cst.representation.owrl.QualityDimension;

/**
 *
 * @author rgudwin
 */
public class DialogFactory extends javax.swing.JDialog {
    
    
    boolean ok = false;

    /**
     * Creates new form WmeDialog
     */
    public DialogFactory(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jName = new javax.swing.JTextField();
        jOK = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jValue = new javax.swing.JTextField();
        jCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Name:");

        jName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNameActionPerformed(evt);
            }
        });

        jOK.setText("OK");
        jOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOKActionPerformed(evt);
            }
        });

        jLabel3.setText("Value");

        jValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jValueActionPerformed(evt);
            }
        });

        jCancel.setText("Cancel");
        jCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jOK)
                        .addGap(64, 64, 64)
                        .addComponent(jCancel)
                        .addGap(67, 67, 67))
                    .addComponent(jName)
                    .addComponent(jValue))
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOK)
                    .addComponent(jCancel))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNameActionPerformed

    private void jOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOKActionPerformed
        // TODO add your handling code here:
        ok = true;
        setVisible(false);
    }//GEN-LAST:event_jOKActionPerformed

    private void jValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jValueActionPerformed

    private void jCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelActionPerformed
        // TODO add your handling code here:
        ok = false;
        setVisible(false);
    }//GEN-LAST:event_jCancelActionPerformed
    
//    public static WmeNode getIdentifier(WmeNode baseNode, SoarEngine sb) {
//
//    DialogFactory dialog = new DialogFactory(null,true);
//    dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
//    //dialog.setBounds(350, 350, 200, 200);
//    dialog.setTitle("Enter WME data ...");
//    dialog.jValue.setEditable(false);
//    dialog.jValue.setEnabled(false);
//    //RefineryUtilities.centerFrameOnScreen(dialog);
//    dialog.setVisible(true);
//    dialog.dispose();
//    if (dialog.ok == true) {
//        String newname = dialog.jName.getText();
//        Identifier parent = (Identifier)((TreeElement)baseNode.getUserObject()).getElement();
//        Identifier output = sb.CreateIdWME(parent,newname);
//        WmeNode newnode = baseNode.addIdentifier(output,newname );
//        return(newnode);
//    }
//    else return(null);
//    }
    
    public static WMTreeNode getIdentifier(WMTreeNode baseNode, SoarEngine sb) {

    DialogFactory dialog = new DialogFactory(null,true);
    dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
    //dialog.setBounds(350, 350, 200, 200);
    dialog.setTitle("Enter WME data ...");
    dialog.jValue.setEditable(false);
    dialog.jValue.setEnabled(false);
    //RefineryUtilities.centerFrameOnScreen(dialog);
    dialog.setVisible(true);
    dialog.dispose();
    if (dialog.ok == true) {
        String newname = dialog.jName.getText();
        //Identifier parent = (Identifier)((TreeElement)baseNode.getUserObject()).getElement();
        //Identifier output = sb.CreateIdWME(parent,newname);
        WMNode newwmnode = new WMNode(newname);
        WMTreeNode newnode = baseNode.addIdentifier(newwmnode);
        return(newnode);
    }
    else return(null);
    }
    
//    public static WmeNode getValue(WmeNode baseNode, SoarEngine sb) {
//
//    DialogFactory dialog = new DialogFactory(null,true);
//    dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
//    //dialog.setBounds(350, 350, 200, 200);
//    dialog.setTitle("Enter child WME value ...");
//    dialog.jValue.setEditable(true);
//    dialog.jValue.setEnabled(true);
//    //RefineryUtilities.centerFrameOnScreen(dialog);
//    dialog.setVisible(true);
//    dialog.dispose();
//    if (dialog.ok == true) {
//        String newname = dialog.jName.getText();
//        String newvalue = dialog.jValue.getText();
//        Identifier parent = (Identifier)((TreeElement)baseNode.getUserObject()).getElement();
//        try {
//           double dvalue = Double.parseDouble(newvalue); 
//           sb.CreateFloatWME(parent,newname, dvalue);
//        } catch(Exception e) {
//           sb.CreateStringWME(parent, newname, newvalue);
//        }
//        WmeNode newnode = baseNode.addValue(newname,newvalue);
//        return(newnode);
//    }
//    else return(null);
//    } 
    
    public static WMTreeNode getValue(WMTreeNode baseNode, SoarEngine sb) {

    DialogFactory dialog = new DialogFactory(null,true);
    dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
    //dialog.setBounds(350, 350, 200, 200);
    dialog.setTitle("Enter child WME value ...");
    dialog.jValue.setEditable(true);
    dialog.jValue.setEnabled(true);
    //RefineryUtilities.centerFrameOnScreen(dialog);
    dialog.setVisible(true);
    dialog.dispose();
    if (dialog.ok == true) {
        String newname = dialog.jName.getText();
        String newvalue = dialog.jValue.getText();
//        Identifier parent = (Identifier)((TreeElement)baseNode.getUserObject()).getElement();
//        try {
//           double dvalue = Double.parseDouble(newvalue); 
//           sb.CreateFloatWME(parent,newname, dvalue);
//        } catch(Exception e) {
//           sb.CreateStringWME(parent, newname, newvalue);
//        }
        WMNode newwmnode = new WMNode(newname,newvalue);
        WMTreeNode newnode = baseNode.addWMNode(newwmnode);
        return(newnode);
    }
    else return(null);
    } 
    
//    public static Identifier createIdentifier(String wmeString, SoarEngine sb) {
//        return sb.CreateIdWME(sb.getInitialState(), wmeString);
//    }
    
//    public static Property getProperty() {
//
//    DialogFactory dialog = new DialogFactory(null,true);
//    dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
//    //dialog.setBounds(350, 350, 200, 200);
//    dialog.setTitle("Enter Property data ...");
//    dialog.jValue.setEditable(false);
//    dialog.jValue.setEnabled(false);
//    RefineryUtilities.centerFrameOnScreen(dialog);
//    dialog.setVisible(true);
//    dialog.dispose();
//    if (dialog.ok == true) {
//        Property output = new Property(dialog.jName.getText());
//        return(output);
//    }
//    else return(null);
//}  
    
    public static String getString() {

    DialogFactory dialog = new DialogFactory(null,true);
    dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
    //dialog.setBounds(350, 350, 200, 200);
    dialog.setTitle("Enter Property data ...");
    dialog.jValue.setEditable(false);
    dialog.jValue.setEnabled(false);
    //RefineryUtilities.centerFrameOnScreen(dialog);
    dialog.setVisible(true);
    dialog.dispose();
    if (dialog.ok == true) {
        String output = new String(dialog.jName.getText());
        return(output);
    }
    else return(null);
}  
    
    public static Double getDouble() {

    DialogFactory dialog = new DialogFactory(null,true);
    dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
    //dialog.setBounds(350, 350, 200, 200);
    dialog.setTitle("Enter Property data ...");
    dialog.jValue.setEditable(false);
    dialog.jValue.setEnabled(false);
    //RefineryUtilities.centerFrameOnScreen(dialog);
    dialog.setVisible(true);
    dialog.dispose();
    if (dialog.ok == true) {
        Double output = Double.valueOf(dialog.jName.getText());
                //new Double(dialog.jName.getText());
        return(output);
    }
    else return(null);
}  
    
//    public static QualityDimension getQualityDimension() {
//
//    DialogFactory dialog = new DialogFactory(null,true);
//    dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
//    //dialog.setBounds(350, 350, 200, 200);
//    dialog.setTitle("Enter Quality Dimension data ...");
//    dialog.jValue.setEditable(true);
//    dialog.jValue.setEnabled(true);
//    //RefineryUtilities.centerFrameOnScreen(dialog);
//    dialog.setVisible(true);
//    dialog.dispose();
//    if (dialog.ok == true) {
//        QualityDimension output = new QualityDimension(dialog.jName.getText(),dialog.jValue.getText());
//        return(output);
//    }
//    else return(null);
//}

//    public static String editIdentifier(WmeNode node) {
//        DialogFactory dialog = new DialogFactory(null,true);
//        dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
//        //dialog.setBounds(350, 350, 200, 200);
//        dialog.setTitle("Edit Wme data ...");
//        dialog.jValue.setEditable(false);
//        dialog.jValue.setEnabled(false);
//        TreeElement te = (TreeElement) node.getUserObject();
//        String text = te.getName();
//        String tudo[] = text.split(" ");
//        dialog.jName.setText(tudo[0]);
//        //RefineryUtilities.centerFrameOnScreen(dialog);
//        dialog.setVisible(true);
//        dialog.dispose();
//        if (dialog.ok == true) {
//            Identifier id = (Identifier) te.getElement();
//           te.setName(dialog.jName.getText()+" ["+id.toString()+"]");
//           return(dialog.jName.getText());
//        }
//        else return null;
//    }
    
    public static String editIdentifier(WMTreeNode node) {
        DialogFactory dialog = new DialogFactory(null,true);
        dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        //dialog.setBounds(350, 350, 200, 200);
        dialog.setTitle("Edit Wme data ...");
        dialog.jValue.setEditable(false);
        dialog.jValue.setEnabled(false);
        TreeElement te = (TreeElement) node.getUserObject();
        String text = te.getName();
        String tudo[] = text.split(" ");
        dialog.jName.setText(tudo[0]);
        //RefineryUtilities.centerFrameOnScreen(dialog);
        dialog.setVisible(true);
        dialog.dispose();
        if (dialog.ok == true) {
           WMNode id = (WMNode) te.getElement();
           id.setName(dialog.jName.getText());
           te.setName(dialog.jName.getText()+" [*]");
           return(dialog.jName.getText());
        }
        else return null;
    }
    
//    public static String editValue(WmeNode node) {
//        DialogFactory dialog = new DialogFactory(null,true);
//        dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
//        //dialog.setBounds(350, 350, 200, 200);
//        dialog.setTitle("Edit Wme data ...");
//        dialog.jValue.setEditable(true);
//        dialog.jValue.setEnabled(true);
//        TreeElement te = (TreeElement) node.getUserObject();
//        String text = te.getName();
//        String tudo[] = text.split(": ");
//        dialog.jName.setText(tudo[0]);
//        dialog.jValue.setText(tudo[1]);
//        //RefineryUtilities.centerFrameOnScreen(dialog);
//        dialog.setVisible(true);
//        dialog.dispose();
//        if (dialog.ok == true) {
//           te.setName(dialog.jName.getText()+": "+dialog.jValue.getText());
//           return(dialog.jName.getText());
//        }
//        else return null;
//    }
    
    public static String editValue(WMTreeNode node) {
        DialogFactory dialog = new DialogFactory(null,true);
        dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        //dialog.setBounds(350, 350, 200, 200);
        dialog.setTitle("Edit Wme data ...");
        dialog.jValue.setEditable(true);
        dialog.jValue.setEnabled(true);
        TreeElement te = (TreeElement) node.getUserObject();
        String text = te.getName();
        String tudo[] = text.split(": ");
        dialog.jName.setText(tudo[0]);
        dialog.jValue.setText(tudo[1]);
        //RefineryUtilities.centerFrameOnScreen(dialog);
        dialog.setVisible(true);
        dialog.dispose();
        if (dialog.ok == true) {
           WMNode id = (WMNode) te.getElement();
           id.setName(dialog.jName.getText());
           id.setValue(dialog.jValue.getText());
           te.setName(dialog.jName.getText()+": "+dialog.jValue.getText());
           return(dialog.jName.getText());
        }
        else return null;
    }
    
    public static void editAtribute(String p) {
        DialogFactory dialog = new DialogFactory(null,true);
        dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        //dialog.setBounds(350, 350, 200, 200);
        dialog.setTitle("Edit Property data ...");
        dialog.jValue.setEditable(false);
        dialog.jValue.setEnabled(false);
        dialog.jName.setText(p);
        //RefineryUtilities.centerFrameOnScreen(dialog);
        dialog.setVisible(true);
        dialog.dispose();
        if (dialog.ok == true) {
           p = dialog.jName.getText();
        }
    }


    public static void editValue(String qd) {
        DialogFactory dialog = new DialogFactory(null,true);
        dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        //dialog.setBounds(350, 350, 200, 200);
        dialog.setTitle("Edit Quality Dimension data ...");
        dialog.jValue.setEditable(true);
        dialog.jValue.setEnabled(true);
        dialog.jName.setText(qd);
        dialog.jValue.setText(qd);
        //RefineryUtilities.centerFrameOnScreen(dialog);
        dialog.setVisible(true);
        dialog.dispose();
        if (dialog.ok == true) {
           qd = dialog.jName.getText();
           //qd .setValue(dialog.jValue.getText());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jCancel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jName;
    private javax.swing.JButton jOK;
    private javax.swing.JTextField jValue;
    // End of variables declaration//GEN-END:variables
}
